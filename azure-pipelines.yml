# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util.Configuration>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.Configuration.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util.IO>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.IO.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util.IO.Console>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.IO.Console.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
    
- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util.Testing>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.Testing.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish <Catharsium.Util.Web>'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Catharsium.Util.Web.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet.org'
